// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SchoolProject.Infrastructure.Database;

namespace SchoolProject.Infrastructure.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SchoolProject.Domain.DatabaseStructure.SchoolClass", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<char>("Group")
                        .HasColumnType("character(1)");

                    b.Property<List<string>>("LanguageGroups")
                        .HasColumnType("text[]");

                    b.HasKey("ID");

                    b.HasIndex("Group")
                        .IsUnique();

                    b.ToTable("SchoolClasses");
                });

            modelBuilder.Entity("SchoolProject.Domain.DatabaseStructure.Student", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("LanguageGroup")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("SchoolClassId")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("SchoolClassId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolProject.Domain.DatabaseStructure.Tutor", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<Guid>("SchoolClassId")
                        .HasColumnType("uuid");

                    b.HasKey("ID");

                    b.HasIndex("SchoolClassId")
                        .IsUnique();

                    b.ToTable("Tutors");
                });

            modelBuilder.Entity("SchoolProject.Domain.DatabaseStructure.Student", b =>
                {
                    b.HasOne("SchoolProject.Domain.DatabaseStructure.SchoolClass", "SchoolClass")
                        .WithMany("Students")
                        .HasForeignKey("SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolClass");
                });

            modelBuilder.Entity("SchoolProject.Domain.DatabaseStructure.Tutor", b =>
                {
                    b.HasOne("SchoolProject.Domain.DatabaseStructure.SchoolClass", "SchoolClass")
                        .WithOne("Tutor")
                        .HasForeignKey("SchoolProject.Domain.DatabaseStructure.Tutor", "SchoolClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolClass");
                });

            modelBuilder.Entity("SchoolProject.Domain.DatabaseStructure.SchoolClass", b =>
                {
                    b.Navigation("Students");

                    b.Navigation("Tutor");
                });
#pragma warning restore 612, 618
        }
    }
}
